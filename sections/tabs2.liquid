{%- if section.blocks.size > 0 -%}
<div class="section-spacing {% if section.settings.separate_section_with_border %}bordered-section{% endif %}">
  <div class="container {% if section.settings.text_alignment == 'center' %}container--xl{% endif %}">
    <div class="section-stack">
      {%- render 'section-header', subheading: section.settings.subheading, heading: section.settings.title, content: section.settings.content, text_alignment: section.settings.text_alignment -%}

      <!-- DESKTOP LAYOUT -->

      <x-tabs class="content-tabs {% if section.settings.text_alignment == 'center' %}content-tabs--center{% endif %} hidden sm:block">
        <template shadowrootmode="open">
          <slot role="tablist" part="tab-list" name="title"></slot>
          <slot part="tab-panel-list" name="content"></slot>
        </template>

        {%- for block in section.blocks -%}
          {%- assign title = block.settings.title | default: block.settings.collection.title -%}

          {%- if title != blank and block.settings.collection != blank -%}
            <button class="h6" type="button" role="tab" slot="title" {{ block.shopify_attributes }}>{{ title }}</button>

            <div role="tabpanel" slot="content" {% cycle '', 'hidden', 'hidden', 'hidden', 'hidden' %}>
              <div class="prose">

              <div>
                <product-list class="product-list">
                  {%- for product in block.settings.collection.products limit: block.settings.products_count -%}
                    {%- render 'product-card', product: product, hide_product_information: section.settings.hide_product_information, block: block -%}
                  {%- else -%}
                    {%- for i in (1..block.settings.products_count) -%}
                      {%- render 'product-card-placeholder', loop_index: forloop.index0, hide_product_information: section.settings.hide_product_information -%}
                    {%- endfor -%}
                  {%- endfor -%}
                </product-list>
              </div>
            </div>
            </div>

            <div slot="accordion-tab">
              {%- render 'accordion', title: title, content: content, open: block.settings.open_on_mobile -%}
            </div>
          {%- endif -%}
        {%- endfor -%}
      </x-tabs>

      <!-- MOBILE LAYOUT -->

      <div class="accordion-group sm:hidden">
        {%- for block in section.blocks -%}
          {%- assign title = block.settings.title | default: block.settings.collection.title -%}

          {%- if title != blank and block.settings.collection != blank -%}
            {%- capture content -%}
              <product-list class="product-list {% if section.settings.hide_product_information %}product-list--compact{% endif %} justify-center">
                {%- for product in block.settings.collection.products limit: block.settings.products_count -%}
                  {%- render 'product-card', product: product, hide_product_information: section.settings.hide_product_information, block: block -%}
                {%- else -%}
                  {%- for i in (1..block.settings.products_count) -%}
                    {%- render 'product-card-placeholder', loop_index: forloop.index0, hide_product_information: section.settings.hide_product_information -%}
                  {%- endfor -%}
                {%- endfor -%}
              </product-list>
            {%- endcapture -%}
            {%- render 'accordion', title: title, content: content, open: block.settings.open_on_mobile -%}
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>
{%- endif -%}

<style>

.product-list {
    --product-list-max-items-per-row-allowed: 2;
    --product-list-calculated-items-per-row: min(var(--product-list-max-items-per-row-allowed), var(--product-list-items-per-row));
    --product-list-default-row-gap: 2.1875rem;
    --product-list-default-column-gap: .625rem;
    --product-list-calculated-row-gap: clamp(var(--section-vertical-spacing) / 4, var(--product-list-default-row-gap)* var(--product-list-vertical-spacing-factor, 1), var(--section-vertical-spacing)* 2);
    --product-list-calculated-column-gap: clamp(var(--container-gutter) / 4, var(--product-list-default-column-gap)* var(--product-list-horizontal-spacing-factor, 1), var(--container-gutter)* 2);
    --product-list-card-width: calc(100% / var(--product-list-calculated-items-per-row) - var(--product-list-calculated-column-gap, 0px)*(var(--product-list-calculated-items-per-row) - 1) / var(--product-list-calculated-items-per-row));
    grid: auto / repeat(auto-fit, var(--product-list-card-width));
    align-items: start;
    column-gap: var(--product-list-calculated-column-gap);
    row-gap: var(--product-list-calculated-row-gap);
    display: grid;
}

</style>


{% schema %}
{
  "name": "Collection Tabs",
  "class": "shopify-section--collection-tabs",
  "max_blocks": 5,
  "disabled_on": {
    "groups": ["header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "separate_section_with_border",
      "label": "t:global.section.separate_section_with_border",
      "default": true
    },
    {
      "type": "inline_richtext",
      "id": "subheading",
      "label": "t:global.text.subheading",
      "default": "Subheading"
    },
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "t:global.text.heading",
      "default": "Collection Tabs"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "t:global.text.alignment",
      "options": [
        {
          "value": "start",
          "label": "t:global.position.left"
        },
        {
          "value": "center",
          "label": "t:global.position.center"
        }
      ],
      "default": "center"
    },
    {
      "type": "checkbox",
      "id": "hide_product_information",
      "label": "Hide product information",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "collection_tab",
      "name": "Collection Tab",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Tab title",
          "default": "Collection"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "range",
          "id": "products_count",
          "min": 2,
          "max": 12,
          "step": 1,
          "default": 4,
          "label": "Products to show"
        },
        {
          "type": "checkbox",
          "id": "open_on_mobile",
          "label": "Open on mobile",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Tabs",
      "blocks": [
        {
          "type": "collection_tab"
        },
        {
          "type": "collection_tab"
        },
        {
          "type": "collection_tab"
        }
      ]
    }
  ]
}
{% endschema %}